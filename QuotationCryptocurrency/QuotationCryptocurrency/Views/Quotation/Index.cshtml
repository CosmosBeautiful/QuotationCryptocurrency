@using QuotationCryptocurrency.Models
@using QuotationCryptocurrency.Quotations
@using QuotationCryptocurrency.FilterModels.Quotation

@addTagHelper "*, QuotationCryptocurrency"

@model QuotationViewModel
@{
    ViewBag.Title = "Index";
}
    <div>
        <h2>QuotationCryptocurrency</h2>
        <form method="get">
            <div class="form-inline">
                <label class="control-label">Name: </label>
                @Html.TextBox("selectedName", Model.FilterModel.SelectedName, htmlAttributes: new { @class = "form-control" })

                <input type="submit" value="Фильтр" class="btn btn-default" />
            </div>
        </form>

        <hr />

        <table class="table table-striped">
            <tr>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.NameSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        Name
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.SymbolSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        Symbol
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.PriceSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        Price
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.PercentChange1hSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        PercentChange1h
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.PercentChange24hSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        PercentChange24hSort
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.MarketCapSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        MarketCap
                    </a>
                </th>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortModel.LastUpdatedSort)"
                       asp-route-selectedName="@(Model.FilterModel.SelectedName)">
                        LastUpdated
                    </a>
                </th>
            </tr>

            @foreach (QuotationModel item in Model.Quotations)
            {
                <tr>
                    <td>
                        <img src="https://s2.coinmarketcap.com/static/img/coins/32x32/@{@item.Id}.png" class="logo-sprite" alt="Bitcoin" height="16" width="16">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Symbol)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PercentChange1h)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PercentChange24h)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MarketCap)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastUpdated)
                    </td>
                </tr>
            }
        </table>

        <div class="container">
            <div class="d-flex flex-row">
                @if (Model.PageNavigation.HasPreviousPage)
                {
                    <div class="page-item">
                        <a asp-action="Index"
                           asp-route-pageData="@(Model.PageNavigation.PageNumber - 1)" class="page-link">
                            Back
                        </a>
                    </div>

                }
                <page-link page-navigation="Model.PageNavigation" page-action="Index"></page-link>
                @if (Model.PageNavigation.HasNextPage)
                {
                    
                    <div class="page-item">
                        <a asp-action="Index"
                           asp-route-pageData="@(Model.PageNavigation.PageNumber + 1)" class="page-link">
                            Next
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>